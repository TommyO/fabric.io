// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewActiveNowParams creates a new ActiveNowParams object
// with the default values initialized.
func NewActiveNowParams() *ActiveNowParams {
	var (
		buildDefault = string("all")
	)
	return &ActiveNowParams{
		Build: &buildDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewActiveNowParamsWithTimeout creates a new ActiveNowParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewActiveNowParamsWithTimeout(timeout time.Duration) *ActiveNowParams {
	var (
		buildDefault = string("all")
	)
	return &ActiveNowParams{
		Build: &buildDefault,

		timeout: timeout,
	}
}

// NewActiveNowParamsWithContext creates a new ActiveNowParams object
// with the default values initialized, and the ability to set a context for a request
func NewActiveNowParamsWithContext(ctx context.Context) *ActiveNowParams {
	var (
		buildDefault = string("all")
	)
	return &ActiveNowParams{
		Build: &buildDefault,

		Context: ctx,
	}
}

// NewActiveNowParamsWithHTTPClient creates a new ActiveNowParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewActiveNowParamsWithHTTPClient(client *http.Client) *ActiveNowParams {
	var (
		buildDefault = string("all")
	)
	return &ActiveNowParams{
		Build:      &buildDefault,
		HTTPClient: client,
	}
}

/*ActiveNowParams contains all the parameters to send to the API endpoint
for the active now operation typically these are written to a http.Request
*/
type ActiveNowParams struct {

	/*Authorization*/
	Authorization string
	/*AppID*/
	AppID string
	/*Build*/
	Build *string
	/*OrganizationID*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the active now params
func (o *ActiveNowParams) WithTimeout(timeout time.Duration) *ActiveNowParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the active now params
func (o *ActiveNowParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the active now params
func (o *ActiveNowParams) WithContext(ctx context.Context) *ActiveNowParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the active now params
func (o *ActiveNowParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the active now params
func (o *ActiveNowParams) WithHTTPClient(client *http.Client) *ActiveNowParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the active now params
func (o *ActiveNowParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the active now params
func (o *ActiveNowParams) WithAuthorization(authorization string) *ActiveNowParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the active now params
func (o *ActiveNowParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithAppID adds the appID to the active now params
func (o *ActiveNowParams) WithAppID(appID string) *ActiveNowParams {
	o.SetAppID(appID)
	return o
}

// SetAppID adds the appId to the active now params
func (o *ActiveNowParams) SetAppID(appID string) {
	o.AppID = appID
}

// WithBuild adds the build to the active now params
func (o *ActiveNowParams) WithBuild(build *string) *ActiveNowParams {
	o.SetBuild(build)
	return o
}

// SetBuild adds the build to the active now params
func (o *ActiveNowParams) SetBuild(build *string) {
	o.Build = build
}

// WithOrganizationID adds the organizationID to the active now params
func (o *ActiveNowParams) WithOrganizationID(organizationID string) *ActiveNowParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the active now params
func (o *ActiveNowParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *ActiveNowParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param app_id
	if err := r.SetPathParam("app_id", o.AppID); err != nil {
		return err
	}

	if o.Build != nil {

		// query param build
		var qrBuild string
		if o.Build != nil {
			qrBuild = *o.Build
		}
		qBuild := qrBuild
		if qBuild != "" {
			if err := r.SetQueryParam("build", qBuild); err != nil {
				return err
			}
		}

	}

	// path param organization_id
	if err := r.SetPathParam("organization_id", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
