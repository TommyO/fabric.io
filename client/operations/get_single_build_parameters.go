// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSingleBuildParams creates a new GetSingleBuildParams object
// with the default values initialized.
func NewGetSingleBuildParams() *GetSingleBuildParams {
	var (
		authorizationDefault     = string("Bearer {access_token}")
		responseBodyPathDefault  = string("{organization_id}")
		appBuildVersionDefault   = string("75")
		appDisplayVersionDefault = string("3.0.5")
	)
	return &GetSingleBuildParams{
		Authorization:     &authorizationDefault,
		ResponseBodyPath:  responseBodyPathDefault,
		AppBuildVersion:   &appBuildVersionDefault,
		AppDisplayVersion: &appDisplayVersionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSingleBuildParamsWithTimeout creates a new GetSingleBuildParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSingleBuildParamsWithTimeout(timeout time.Duration) *GetSingleBuildParams {
	var (
		authorizationDefault     = string("Bearer {access_token}")
		responseBodyPathDefault  = string("{organization_id}")
		appBuildVersionDefault   = string("75")
		appDisplayVersionDefault = string("3.0.5")
	)
	return &GetSingleBuildParams{
		Authorization:     &authorizationDefault,
		ResponseBodyPath:  responseBodyPathDefault,
		AppBuildVersion:   &appBuildVersionDefault,
		AppDisplayVersion: &appDisplayVersionDefault,

		timeout: timeout,
	}
}

// NewGetSingleBuildParamsWithContext creates a new GetSingleBuildParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSingleBuildParamsWithContext(ctx context.Context) *GetSingleBuildParams {
	var (
		authorizationDefault     = string("Bearer {access_token}")
		responseBodyPathDefault  = string("{organization_id}")
		appBuildVersionDefault   = string("75")
		appDisplayVersionDefault = string("3.0.5")
	)
	return &GetSingleBuildParams{
		Authorization:     &authorizationDefault,
		ResponseBodyPath:  responseBodyPathDefault,
		AppBuildVersion:   &appBuildVersionDefault,
		AppDisplayVersion: &appDisplayVersionDefault,

		Context: ctx,
	}
}

// NewGetSingleBuildParamsWithHTTPClient creates a new GetSingleBuildParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSingleBuildParamsWithHTTPClient(client *http.Client) *GetSingleBuildParams {
	var (
		authorizationDefault     = string("Bearer {access_token}")
		responseBodyPathDefault  = string("{organization_id}")
		appBuildVersionDefault   = string("75")
		appDisplayVersionDefault = string("3.0.5")
	)
	return &GetSingleBuildParams{
		Authorization:     &authorizationDefault,
		ResponseBodyPath:  responseBodyPathDefault,
		AppBuildVersion:   &appBuildVersionDefault,
		AppDisplayVersion: &appDisplayVersionDefault,
		HTTPClient:        client,
	}
}

/*GetSingleBuildParams contains all the parameters to send to the API endpoint
for the get single build operation typically these are written to a http.Request
*/
type GetSingleBuildParams struct {

	/*Authorization*/
	Authorization *string
	/*ResponseBodyPath*/
	ResponseBodyPath string
	/*AppBuildVersion*/
	AppBuildVersion *string
	/*AppDisplayVersion*/
	AppDisplayVersion *string
	/*AppID*/
	AppID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get single build params
func (o *GetSingleBuildParams) WithTimeout(timeout time.Duration) *GetSingleBuildParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get single build params
func (o *GetSingleBuildParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get single build params
func (o *GetSingleBuildParams) WithContext(ctx context.Context) *GetSingleBuildParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get single build params
func (o *GetSingleBuildParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get single build params
func (o *GetSingleBuildParams) WithHTTPClient(client *http.Client) *GetSingleBuildParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get single build params
func (o *GetSingleBuildParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get single build params
func (o *GetSingleBuildParams) WithAuthorization(authorization *string) *GetSingleBuildParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get single build params
func (o *GetSingleBuildParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithResponseBodyPath adds the responseBodyPath to the get single build params
func (o *GetSingleBuildParams) WithResponseBodyPath(responseBodyPath string) *GetSingleBuildParams {
	o.SetResponseBodyPath(responseBodyPath)
	return o
}

// SetResponseBodyPath adds the responseBodyPath to the get single build params
func (o *GetSingleBuildParams) SetResponseBodyPath(responseBodyPath string) {
	o.ResponseBodyPath = responseBodyPath
}

// WithAppBuildVersion adds the appBuildVersion to the get single build params
func (o *GetSingleBuildParams) WithAppBuildVersion(appBuildVersion *string) *GetSingleBuildParams {
	o.SetAppBuildVersion(appBuildVersion)
	return o
}

// SetAppBuildVersion adds the appBuildVersion to the get single build params
func (o *GetSingleBuildParams) SetAppBuildVersion(appBuildVersion *string) {
	o.AppBuildVersion = appBuildVersion
}

// WithAppDisplayVersion adds the appDisplayVersion to the get single build params
func (o *GetSingleBuildParams) WithAppDisplayVersion(appDisplayVersion *string) *GetSingleBuildParams {
	o.SetAppDisplayVersion(appDisplayVersion)
	return o
}

// SetAppDisplayVersion adds the appDisplayVersion to the get single build params
func (o *GetSingleBuildParams) SetAppDisplayVersion(appDisplayVersion *string) {
	o.AppDisplayVersion = appDisplayVersion
}

// WithAppID adds the appID to the get single build params
func (o *GetSingleBuildParams) WithAppID(appID string) *GetSingleBuildParams {
	o.SetAppID(appID)
	return o
}

// SetAppID adds the appId to the get single build params
func (o *GetSingleBuildParams) SetAppID(appID string) {
	o.AppID = appID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSingleBuildParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	// path param ResponseBodyPath
	if err := r.SetPathParam("ResponseBodyPath", o.ResponseBodyPath); err != nil {
		return err
	}

	if o.AppBuildVersion != nil {

		// query param app[build_version]
		var qrAppBuildVersion string
		if o.AppBuildVersion != nil {
			qrAppBuildVersion = *o.AppBuildVersion
		}
		qAppBuildVersion := qrAppBuildVersion
		if qAppBuildVersion != "" {
			if err := r.SetQueryParam("app[build_version]", qAppBuildVersion); err != nil {
				return err
			}
		}

	}

	if o.AppDisplayVersion != nil {

		// query param app[display_version]
		var qrAppDisplayVersion string
		if o.AppDisplayVersion != nil {
			qrAppDisplayVersion = *o.AppDisplayVersion
		}
		qAppDisplayVersion := qrAppDisplayVersion
		if qAppDisplayVersion != "" {
			if err := r.SetQueryParam("app[display_version]", qAppDisplayVersion); err != nil {
				return err
			}
		}

	}

	// path param app_id
	if err := r.SetPathParam("app_id", o.AppID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
