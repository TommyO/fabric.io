// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/TommyO/fabric.io/models"
)

// OAuthReader is a Reader for the OAuth structure.
type OAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewOAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewOAuthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOAuthOK creates a OAuthOK with default headers values
func NewOAuthOK() *OAuthOK {
	return &OAuthOK{}
}

/*OAuthOK handles this case with default header values.

OAuth token and refresh token
*/
type OAuthOK struct {
	Payload *models.OAuthOKBody
}

func (o *OAuthOK) Error() string {
	return fmt.Sprintf("[POST /oauth/token][%d] oAuthOK  %+v", 200, o.Payload)
}

func (o *OAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOAuthUnauthorized creates a OAuthUnauthorized with default headers values
func NewOAuthUnauthorized() *OAuthUnauthorized {
	return &OAuthUnauthorized{}
}

/*OAuthUnauthorized handles this case with default header values.

Unauthorized
*/
type OAuthUnauthorized struct {
	Payload *models.OAuthUnauthorizedBody
}

func (o *OAuthUnauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth/token][%d] oAuthUnauthorized  %+v", 401, o.Payload)
}

func (o *OAuthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
